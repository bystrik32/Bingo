<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Bingo Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        h1 {
            color: #333;
        }
        button {
            padding: 10px 20px;
            margin: 10px;
            font-size: 16px;
            cursor: pointer;
        }
        #bingoCards {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
        }
        .bingoCard {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            width: 150px;
            margin: 10px;
            border: 2px solid #333;
        }
        .bingoCell {
            padding: 10px;
            border: 1px solid #ddd;
            font-size: 16px;
            font-weight: bold;
            text-align: center;
        }
        .marked {
            background-color: yellow;
        }
    </style>
</head>
<body>
    <h1>Dynamic Bingo Game</h1>
    <label for="numPlayers">Enter number of players:</label>
    <input type="number" id="numPlayers" min="1" max="10" value="1">
    <button onclick="startGame()">Start Game</button>
    
    <div id="bingoCards"></div>
    <button onclick="drawNumber()">Draw Number</button>
    <p id="drawnNumber"></p>
    <p id="winner"></p>

    <script>
        let players = [];
        let drawnNumbers = new Set();

        function startGame() {
            players = [];
            drawnNumbers.clear();
            document.getElementById("bingoCards").innerHTML = '';
            document.getElementById("winner").innerText = '';
            document.getElementById("drawnNumber").innerText = '';

            const numPlayers = document.getElementById("numPlayers").value;
            for (let i = 0; i < numPlayers; i++) {
                const card = generateBingoCard();
                players.push(card);
                displayCard(card, `Player ${i + 1}`);
            }
        }

        function generateBingoCard() {
            const card = { B: [], I: [], N: [], G: [], O: [] };
            for (let col in card) {
                const start = { B: 1, I: 16, N: 31, G: 46, O: 61 }[col];
                card[col] = Array.from({ length: 5 }, () => randomUniqueNumber(start, start + 14, card[col]));
            }
            card.N[2] = "Free";
            return card;
        }

        function randomUniqueNumber(min, max, existing) {
            let num;
            do { num = Math.floor(Math.random() * (max - min + 1)) + min; } while (existing.includes(num));
            return num;
        }

        function displayCard(card, playerName) {
            const cardDiv = document.createElement("div");
            cardDiv.className = "bingoCard";
            cardDiv.innerHTML = `<h3>${playerName}</h3>`;
            
            for (let col in card) {
                card[col].forEach(num => {
                    const cell = document.createElement("div");
                    cell.className = "bingoCell";
                    cell.innerText = num;
                    cardDiv.appendChild(cell);
                });
            }
            document.getElementById("bingoCards").appendChild(cardDiv);
        }

        function drawNumber() {
            let number;
            do { number = Math.floor(Math.random() * 75) + 1; } while (drawnNumbers.has(number));
            drawnNumbers.add(number);
            
            document.getElementById("drawnNumber").innerText = `Drawn Number: ${number}`;
            markCards(number);
        }

        function markCards(number) {
            players.forEach((card, index) => {
                const bingoDivs = document.getElementsByClassName("bingoCard")[index].getElementsByClassName("bingoCell");
                ["B", "I", "N", "G", "O"].forEach((col, colIndex) => {
                    card[col].forEach((cell, rowIndex) => {
                        if (cell === number) {
                            bingoDivs[colIndex * 5 + rowIndex].classList.add("marked");
                            card[col][rowIndex] = "X";
                        }
                    });
                });
                
                if (checkWin(card)) {
                    document.getElementById("winner").innerText = `Congratulations, Player ${index + 1} wins!`;
                }
            });
        }

        function checkWin(card) {
            const columns = ["B", "I", "N", "G", "O"];
            for (let i = 0; i < 5; i++) {
                if (columns.every(col => card[col][i] === "X") || card[columns[i]].every(num => num === "X")) {
                    return true;
                }
            }
            if (columns.every((col, i) => card[col][i] === "X") || columns.every((col, i) => card[col][4 - i] === "X")) {
                return true;
            }
            return false;
        }
    </script>
</body>
</html>
